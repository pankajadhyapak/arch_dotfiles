#!/bin/env sh

# INIT
printf "$$" > ~/.cache/pidofbar
sec=0

update_memory () {
	memory="$(free | grep Mem | awk '{ printf("%.2f%", $3/$2 * 100.0) }')"
}

update_cpu () {
	cpu=$(top -b -n2 -p 1 | fgrep "Cpu(s)" | tail -1 | awk -F'id,' -v prefix="$prefix" '{ split($1, vs, ","); v=vs[length(vs)]; sub("%", "", v); printf "%s%.1f%%\n", prefix, 100 - v }')
}

update_time () {
	time="$(date "+%a %d %b %I:%M %P")"
}


update_pkg_updates() {
	updates=$(checkupdates | wc -l)
	if [ "$updates"  == 0 ]; then
		package_status=""
	else
		package_status=" $updates"
	fi
}

update_weather() {
	weather=" $(curl -s https://wttr.in/Berlin?format=%t)"
}

update_bat () {
	# you might need to change the path depending on your device
	read -r bat_status </sys/class/power_supply/BAT0/status
	read -r bat_capacity </sys/class/power_supply/BAT0/capacity
	if [ "$bat_status" = "Charging" ]; then
		bat_status="⚡"
	elif [ "$bat_capacity" -gt 80 ]; then
		bat_status=" "
	elif [ "$bat_capacity" -gt 60 ]; then
		bat_status=" "
	elif [ "$bat_capacity" -gt 40 ]; then
		bat_status=" "
	elif [ "$bat_capacity" -gt 20 ]; then
		bat_status=" "
	else
		bat_status="?"
	fi
	bat="$bat_status $bat_capacity%"
}

display () {
	xsetroot -name " $package_status | $weather |  $cpu |  $memory | $bat | $time"
}

while true
do
	sleep 1 &
  wait && {
		# to update item ever n seconds with a offset of m
		## [ $((sec % n)) -eq m ] && udpate_item
		[ $((sec % 10 )) -eq 0 ] && update_time
		[ $((sec % 60)) -eq 0 ] && update_memory
		[ $((sec % 60)) -eq 0 ] && update_cpu
		[ $((sec % 60 )) -eq 0 ] && update_bat
		[ $((sec % 60 )) -eq 0 ] && update_pkg_updates
		[ $((sec % 60 )) -eq 0 ] && update_weather

		# how often the display updates ( 5 seconds )
		[ $((sec % 5 )) -eq 0 ] && display
		sec=$((sec + 1))
	}
done
